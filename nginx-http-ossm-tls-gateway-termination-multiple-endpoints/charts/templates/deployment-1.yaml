apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-http-1
  namespace: {{ .Values.namespace_name }}
spec:
  selector:
    matchLabels:
      app: nginx-http-1
  replicas: 1 
  template:
    metadata:
      labels:
        app: nginx-http-1
        version: v1
      annotations:
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/excludeOutboundPorts: "443"
    spec:
      containers:
      - name: nginx
        image: {{ .Values.registry_name }}/{{ .Values.registry_org }}/{{ .Values.image_name }}:{{ .Values.image_tag }}
        ports:
        - containerPort: 80
        volumeMounts:
            - name: nginx-index-file-1
              mountPath: /usr/share/nginx/html/v1/k2view/api/searchCustomer/
            - name: nginx-index-file-2
              mountPath: /usr/share/nginx/html/v1/k2view/api/GetOutage/
      volumes:
      - name: nginx-index-file-1
        configMap:
          name: index-html-configmap
      - name: nginx-index-file-2
        configMap:
          name: index-html-configmap-2
      initContainers:
      - name: ose-cli
        image: {{ .Values.registry_name }}/{{ .Values.registry_org }}/{{ .Values.image_init_name }}:{{ .Values.image_init_tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        command: ["/bin/bash", "-c"]
        args:
          -   export domain=$(oc get ingresses.config.openshift.io cluster -ojsonpath='{.spec.domain}{"\n"}' 2>/dev/null);
              openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout /tmp/ca.key -out /tmp/ca.crt;
              openssl req -out /tmp/nginx.csr -newkey rsa:2048 -nodes -keyout /tmp/nginx.key -subj "/CN=*.$domain/O=httpbin organization";
              openssl x509 -req -sha256 -days 365 -CA /tmp/ca.crt -CAkey /tmp/ca.key -set_serial 0 -in /tmp/nginx.csr -out /tmp/nginx.crt;
              oc -n istio-system get secret {{ .Values.secret_name }} 2>/dev/null;
              if [ $? -eq 0 ]; then oc -n istio-system delete secret {{ .Values.secret_name }} &&  oc create -n istio-system secret tls {{ .Values.secret_name }} --key=/tmp/nginx.key --cert=/tmp/nginx.crt; else oc create -n istio-system secret tls {{ .Values.secret_name }} --key=/tmp/nginx.key --cert=/tmp/nginx.crt; fi;
              oc -n {{ .Values.namespace_name }} create cm {{ .Values.configmap_name }} --from-file=/tmp/ca.crt --from-file=/tmp/ca.key
      serviceAccount: oc-cli
      serviceAccountName: oc-cli
